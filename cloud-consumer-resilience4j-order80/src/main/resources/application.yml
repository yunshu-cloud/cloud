server:
  port: 80
eureka:
  client:
    service-url:
      # 指定eureka server 地址
      defaultZone: http://localhost:7001/eureka/,http://localhost:7002/eureka/
  instance:
    instance-id: instance-consumer
spring:
  application:
    name: application-consumer

# 超级机制
resilience4j:
  # 超时机制
  timelimiter:
    instances:
      delay:
        # 设置超时时间 5秒
        timeoutDuration: 2
  ratelimiter:
    instances:
      backendA:
        # 限流周期时长。    默认：500纳秒
        limitRefreshPeriod: 5s
        # 周期内允许通过的请求数量。    默认：50
        limitForPeriod: 2

  thread-pool-bulkhead:
    instances:
      backendA:
        # 最大线程池大小
        maxThreadPoolSize: 4
        # 核心线程池大小
        coreThreadPoolSize: 2
        #  队列容量
        queueCapacity: 2
  #信号量隔离
  bulkhead:
    instances:
      backendA:
        # 隔离允许并发线程执行的最大数量
        maxConcurrentCalls: 5
        # 当达到并发调用数量时，新的线程的阻塞时间
        maxWaitDuration: 20ms
  retry:
    instances:
      backendA:
        # 最大重试次数
        maxRetryAttempts: 3
        # 固定的重试间隔
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2





# 熔断降级
#resilience4j.circuitbreaker:
#  configs:
#    default:
#      # 熔断器打开的失败阈值
#      failureRateThreshold: 30
#      # 默认滑动窗口大小，circuitbreaker使用基于计数和时间范围欢动窗口聚合统计失败率
#      slidingWindowSize: 10
#      # 计算比率的最小值，和滑动窗口大小去最小值，即当请求发生5次才会计算失败率
#      minimumNumberOfCalls: 5
#      # 滑动窗口类型，默认为基于计数的滑动窗口
#      slidingWindowType: TIME_BASED
#      # 半开状态允许的请求数
#      permittedNumberOfCallsInHalfOpenState: 3
#      # 是否自动从打开到半开
#      automaticTransitionFromOpenToHalfOpenEnabled: true
#      # 熔断器从打开到半开需要的时间
#      waitDurationInOpenState: 2s
#      recordExceptions:
#        - java.lang.Exception
#  instances:
#    backendA:
#      baseConfig: default




#
resilience4j.circuitbreaker:
  configs:
    default:
      # 熔断器打开的失败阈值
      failureRateThreshold: 30
      # 默认滑动窗口大小，circuitbreaker使用基于计数和时间范围欢动窗口聚合统计失败率
      slidingWindowSize: 10
      # 计算比率的最小值，和滑动窗口大小去最小值，即当请求发生5次才会计算失败率
      minimumNumberOfCalls: 5
      # 滑动窗口类型，默认为基于计数的滑动窗口
      slidingWindowType: TIME_BASED
      # 半开状态允许的请求数
      permittedNumberOfCallsInHalfOpenState: 3
      # 是否自动从打开到半开
      automaticTransitionFromOpenToHalfOpenEnabled: true
      # 熔断器从打开到半开需要的时间
      waitDurationInOpenState: 2s
      recordExceptions:
        - java.lang.Exception
  instances:
    backendA:
      baseConfig: default
    backendB:
      # 熔断器打开的失败阈值
      failureRateThreshold: 50
      # 慢调用时间阈值 高于这个阈值的
      slowCallDurationThreshold: 2s
      # 慢调用百分比阈值，断路器吧调用事件大于slow
      slowCallRateThreshold: 30
      slidingWindowSize: 10
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 2
      permittedNumberOfCallsInHalfOpenState: 2
      waitDurationInOpenState: 2s
      eventConsumerBufferSize: 10


